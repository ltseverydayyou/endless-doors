-- discontinued so here's the source code
-- enjoy reading this very scuffed ahh code

if (game.GameId == 3927488489 or game.GameId == 5927366432 or game.GameId == 6023940812) and (game.PlaceId == 10891480658 or game.PlaceId == 16810788519 or game.PlaceId == 17324650150 or game.PlaceId == 17639491565 or game.PlaceId == 17594182379) then

	oldPlace=10891480658
	epicmode=16810788519
	renovation=17324650150
	EMArchive=17639491565
	classicED=17594182379

	decalID=17471548099
	UIdecal="rbxassetid://"..decalID
	local plr = game:GetService("Players").LocalPlayer
	local char = plr.Character or plr.CharacterAdded:Wait()
	local vals = game:GetService("Workspace"):FindFirstChild("Game"):FindFirstChild("Values")

	local r = 0
	local d = 2

	local h=0
	local p=0.1

	local GetService = game.GetService
	iamcore = game:GetService("CoreGui")
	if not game:IsLoaded() then
		local waiting = Instance.new("Message")
		waiting.Parent = iamcore
		waiting.Text = 'waiting for the game to load'
		game.Loaded:Wait()
		waiting:Destroy()
	end

	local IsOnMobile = table.find({Enum.Platform.IOS, Enum.Platform.Android}, game:GetService("UserInputService"):GetPlatform())

function getRoot(char)
	local root = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
	return root
end

	function teleporttodoor()
		local curroom = vals.RoomsNumber.Value
		getRoot(game:GetService("Players").LocalPlayer.Character):PivotTo(workspace.Game.Rooms["Room"..curroom].Door:GetPivot())
	end

	function teleporttokey()
		local curroom = vals.RoomsNumber.Value
		for _,keyroom in ipairs(workspace.Game.Rooms["Room"..curroom]:GetDescendants()) do
			if (keyroom:IsA("BasePart") and keyroom.Name:lower() == "roomkey" and keyroom.Parent.Name:lower() ~= "door") then
				getRoot(game:GetService("Players").LocalPlayer.Character).CFrame = keyroom.CFrame
			end
		end
	end

	function antiRagdoll()
		game:GetService("Players").LocalPlayer.Character:FindFirstChild("RagdollTrigger").Value=false
	end

	function charRotate(val)
		game:GetService("Players").LocalPlayer.Character:FindFirstChild("CanRotate").Value=val
	end

	--[[function processObject(v, itemName)
		if tick() - h > p then
			h = tick()
		if (v:IsA("BasePart") or v:IsA("Model") or v:IsA("Folder")) and v.Name:lower() == itemName then
			local proximityPrompt = v:FindFirstChildOfClass("ProximityPrompt")
			if proximityPrompt then
				local maxDistance = proximityPrompt.MaxActivationDistance
				if (v.Position - getRoot(game:GetService("Players").LocalPlayer.Character).Position).Magnitude <= maxDistance then
					fireproximityprompt(proximityPrompt,1)
				end
			end
		end
	end
	end]]

	local txt = "unknown"

	if IsOnMobile then
		if game.PlaceId == oldPlace then
			txt = "Endless Doors [OLD] | Mobile"
		elseif game.PlaceId == epicmode then
			txt = "Endless Doors [OLD Epic Mode] | Mobile"
		elseif game.PlaceId == renovation then
			txt = "Endless Doors | Mobile"
		elseif game.PlaceId == EMArchive then
			txt = "Endless Doors [Epic Mode] | Mobile"
		elseif game.PlaceId==classicED then
			txt = "Endless Doors [Retro #classic] | Mobile"
		end
	else
		if game.PlaceId == oldPlace then
			txt = "Endless Doors [OLD]"
		elseif game.PlaceId == epicmode then
			txt = "Endless Doors [OLD Epic Mode]"
		elseif game.PlaceId == renovation then
			txt = "Endless Doors"
		elseif game.PlaceId == EMArchive then
			txt = "Endless Doors [Epic Mode]"
		elseif game.PlaceId==classicED then
			txt = "Endless Doors [Retro #classic]"
		end
	end

	task.wait();

	task.spawn(function()
		game:GetService("RunService").RenderStepped:connect(function()
			if tick() - r > d then
			r = tick()
			pcall(function()
				for _,vals in ipairs(game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui"):FindFirstChild("MainGUI"):FindFirstChild("Values"):GetDescendants()) do
					if vals:IsA("DoubleConstrainedValue") then
						vals.MaxValue = 999999
						vals.MinValue = 0
					end
				end
				for _,brah in ipairs(workspace:FindFirstChild("Game"):FindFirstChild("Values"):GetDescendants()) do
					if brah:IsA("DoubleConstrainedValue") then
						brah.MaxValue = 999999
						brah.MinValue = 0
					end
				end
			end)
		end
		end)
	end)

	task.spawn(function()
		local decalsyeeted = true
		local g = game;
		local w = g.Workspace;
		local l = g.Lighting;
		local t = w.Terrain;
		sethiddenproperty(l,"Technology",2)
		sethiddenproperty(t,"Decoration",false)
		t.WaterWaveSize = 0;
		t.WaterWaveSpeed = 0;
		t.WaterReflectance = 0;
		t.WaterTransparency = 0;
		l.GlobalShadows = 0;
		l.FogEnd = math.huge;
		l.Brightness = 0;
		settings().Rendering.QualityLevel="Level01"
		for i, v in pairs(w:GetDescendants()) do
			if v:IsA("BasePart") and not v:IsA("MeshPart") then
				v.Material = "Plastic"
				v.Reflectance = 0
			elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
				v.Transparency = 1
			elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
				v.Lifetime = NumberRange.new(0)
			elseif v:IsA("Explosion") then
				v.BlastPressure = 0
				v.BlastRadius = 0
			elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
				v.Enabled = false
			elseif v:IsA("MeshPart") and decalsyeeted then
				v.Material = "Plastic"
				v.Reflectance = 0
				v.TextureID = 10385902758728957
			elseif v:IsA("SpecialMesh") and decalsyeeted  then
				v.TextureId=0
			elseif v:IsA("ShirtGraphic") and decalsyeeted then
				v.Graphic=0
			elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
				v[v.ClassName.."Template"]=0
			end
		end
		for i = 1,#l:GetChildren() do
			e=l:GetChildren()[i]
			if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
				e.Enabled = false
			end
		end
	end)

	--Player Stats

	function playerRoom()
		return tostring(game:GetService("Players").LocalPlayer.leaderstats.Room.Value)
	end
	function playerBits()
		return tostring(game:GetService("Players").LocalPlayer.leaderstats.Bits.Value)
	end
	function x2bits()
		return tostring(game:GetService("Players").LocalPlayer.Character:FindFirstChild("Values"):FindFirstChild("DoubleBits").Value)
	end
	function fame()
		return tostring(game:GetService("Players").LocalPlayer:FindFirstChild("Fame").Value)
	end
	function deaths()
		return tostring(game:GetService("Players").LocalPlayer:FindFirstChild("Deaths").Value)
	end
	function rifted()
		return tostring(game:GetService("Players").LocalPlayer:FindFirstChild("Rift").Value)
	end
	function inGroup()
		return tostring(game:GetService("Players").LocalPlayer:FindFirstChild("JoinedGroup").Value)
	end

	--Game Info

	function curRoom()
		return tostring(vals.RoomsNumber.Value)
	end
	function philChance()
		return tostring(vals.PhilMeter.Value)
	end
	function tamara()
		return tostring(vals.SpiderChance.Value)
	end
	function revPrice()
		return tostring(vals.RevivePrice.Value)
	end
	function AlivePlrs()
		return tostring(vals.PlayersAlive.Value)
	end
	function inGamePlrs()
		return tostring(vals.PlayersInGame.Value)
	end

	--collectibles

	function fuz()
		return tostring(game:GetService("Players").LocalPlayer.Character:FindFirstChild("Collectibles").Fuzzi.Value)
	end
	function zavv()
		return tostring(game:GetService("Players").LocalPlayer.Character:FindFirstChild("Collectibles").Zav.Value)
	end
	function jaek()
		return tostring(game:GetService("Players").LocalPlayer.Character:FindFirstChild("Collectibles").Jake.Value)
	end
	function cyan()
		return tostring(game:GetService("Players").LocalPlayer.Character:FindFirstChild("Collectibles").Blue.Value)
	end
	function alen()
		return tostring(game:GetService("Players").LocalPlayer.Character:FindFirstChild("Collectibles").Alan.Value)
	end

game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
	fireproximityprompt(prompt,1)
end)

	function killurself(partName)
		task.spawn(function()
			local descendants = game:GetDescendants()
			for _, descendant in ipairs(descendants) do
				if descendant.Name:lower() == partName then
					wait();
					descendant:Destroy()
				end
			end
		end)
	end

	function thingy_idk()
		killurself("fdmg")
		killurself("brokenlamp")
		killurself("abysskill")
		killurself("flowergrowth")
		killurself("longcrate")
		killurself("crate")
		killurself("chasetrigger")
		killurself("spirit")
		killurself("chair")
		killurself("sofa")
		killurself("fire")
	end

	task.spawn(function()
		repeat wait() until game:GetService("Players").LocalPlayer.Character
		task.wait(2)
		spawn(thingy_idk)
	end)

	task.spawn(function()
if game.PlaceId==renovation then
		game:GetService("RunService").RenderStepped:Connect(function()
				antiRagdoll()
		end)
end
	end)

	task.spawn(function()
		game.Workspace.DescendantAdded:Connect(function(descendant)
			if (descendant:IsA("Model") or descendant:IsA("BasePart") or descendant:IsA("ValueBase") or descendant:IsA("LocalScript")) and
				(descendant.Name:lower() == "brokenlamp" or descendant.Name:lower() == "chasetrigger" 
					or descendant.Name:lower() == "abysskill" or descendant.Name:lower() == "fdmg" or descendant.Name:lower() == "flowergrowth" or descendant.Name:lower() == "longcrate" or descendant.Name:lower() == "crate" or descendant.Name:lower() == "spirit" or descendant.Name:lower() == "chair" or descendant.Name:lower() == "sofa" or descendant.Name:lower() == "fire") then
				wait();
				descendant:Destroy()
			end
		end)
	end)

	task.spawn(function()
		wait(1)
		game:GetService("Players").LocalPlayer.Character.Humanoid.AutoJumpEnabled = false
		game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function()
			wait(.5)
			game:GetService("Players").LocalPlayer.Character.Humanoid.AutoJumpEnabled = false
		end)
	end)

	wait(0.3)

	local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/ltseverydayyou/Rayfield-backup/main/Rayfield'))()

	local Window = Rayfield:CreateWindow({
		Name = txt,
		LoadingTitle = txt,
		LoadingSubtitle = "zav x fuzzi",
		ConfigurationSaving = {
			Enabled = true,
			FolderName = "Endless Doors",
			FileName = "RENOVATION"
		}
	})
	local entityEsp = false
	local keyESP = false
	local bitESP = false
	local batteryESP = false
	local rotation = true
	task.spawn(function() -- idk why i even added this lol
		game:GetService("Players").PlayerAdded:Connect(function(noob)
			local h="somebody"
			if noob.Name:lower() == noob.DisplayName:lower() then
				h="@"..noob.Name
			else
				h=noob.DisplayName.." (@"..noob.Name..")"
			end
			Rayfield:Notify({
				Title = "Player Join Log",
				Content = h.." Joined",
				Duration = 3,
				Image = decalID,
			})
		end)
	end)
	task.spawn(function()
		workspace.Game.Entities.ChildAdded:Connect(function(gj)
			if entityEsp then
				check = gj:IsA("Model")
				base = gj:IsA("BasePart")
				if check then
					local BillboardGui = Instance.new("BillboardGui")
					local TextLabel = Instance.new("TextLabel")
					BillboardGui.Adornee = gj:FindFirstChildOfClass("Part")
					BillboardGui.Name = gj.Name
					BillboardGui.Parent = gj
					BillboardGui.Size = UDim2.new(0, 100, 0, 150)
					BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
					BillboardGui.AlwaysOnTop = true
					TextLabel.Parent = BillboardGui
					TextLabel.BackgroundTransparency = 1
					TextLabel.Position = UDim2.new(0, 0, 0, -50)
					TextLabel.Size = UDim2.new(0, 100, 0, 100)
					TextLabel.Font = Enum.Font.SourceSansSemibold
					TextLabel.TextSize = 17
					TextLabel.TextColor3 = Color3.new(1, 0, 0)
					TextLabel.TextStrokeTransparency = 0.3
					TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
					TextLabel.Text = '['..gj.Name..']'
					TextLabel.ZIndex = 10

					local a = Instance.new("BoxHandleAdornment")
					a.Name = gj.Name:lower().."_EndlessESP"
					a.Parent = BillboardGui
					a.Adornee = gj
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Transparency = 0.45
					a.Color3 = Color3.new(1, 0, 0)
				elseif base then
					local BillboardGui = Instance.new("BillboardGui")
					local TextLabel = Instance.new("TextLabel")
					BillboardGui.Adornee = gj
					BillboardGui.Name = gj.Name
					BillboardGui.Parent = gj
					BillboardGui.Size = UDim2.new(0, 100, 0, 150)
					BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
					BillboardGui.AlwaysOnTop = true
					TextLabel.Parent = BillboardGui
					TextLabel.BackgroundTransparency = 1
					TextLabel.Position = UDim2.new(0, 0, 0, -50)
					TextLabel.Size = UDim2.new(0, 100, 0, 100)
					TextLabel.Font = Enum.Font.SourceSansSemibold
					TextLabel.TextSize = 17
					TextLabel.TextColor3 = Color3.new(1, 0, 0)
					TextLabel.TextStrokeTransparency = 0.3
					TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
					TextLabel.Text = '['..gj.Name..']'
					TextLabel.ZIndex = 10

					local a = Instance.new("BoxHandleAdornment")
					a.Name = gj.Name:lower().."_EndlessESP"
					a.Parent = BillboardGui
					a.Adornee = gj
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = gj.Size
					a.Transparency = 0.45
					a.Color3 = Color3.new(1, 0, 0)
				else
				end

				wait();

				Rayfield:Notify({
					Title = "Entity",
					Content = gj.Name.." Has Spawned",
					Duration = 3,
					Image = decalID,
				})
			else
			end
		end)
	end)

	task.spawn(function()
		vals.MimicActivated:GetPropertyChangedSignal("Value"):Connect(function()
			if entityEsp then
				if workspace.Game.Values.MimicActivated.Value then
					wait();

					Rayfield:Notify({
						Title = "Entity",
						Content = "Mimic Is Enabled",
						Duration = 3,
						Image = decalID,
					})
				else
					wait();

					Rayfield:Notify({
						Title = "Entity",
						Content = "Mimic Is Disabled",
						Duration = 3,
						Image = decalID,
					})
				end
			else
			end
		end)
	end)

	task.spawn(function()
		workspace.Game.Rooms.DescendantAdded:Connect(function(roomkey)
			if roomkey.Name:lower() == "roomkey" and roomkey.Parent.Name:lower() ~= "door" then
				if keyESP then
					base = roomkey:IsA("BasePart")
					if base then
						local BillboardGui = Instance.new("BillboardGui")
						local TextLabel = Instance.new("TextLabel")
						BillboardGui.Adornee = roomkey
						BillboardGui.Name = roomkey.Name
						BillboardGui.Parent = roomkey
						BillboardGui.Size = UDim2.new(0, 100, 0, 150)
						BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
						BillboardGui.AlwaysOnTop = true
						TextLabel.Parent = BillboardGui
						TextLabel.BackgroundTransparency = 1
						TextLabel.Position = UDim2.new(0, 0, 0, -50)
						TextLabel.Size = UDim2.new(0, 100, 0, 100)
						TextLabel.Font = Enum.Font.SourceSansSemibold
						TextLabel.TextSize = 17
						TextLabel.TextColor3 = Color3.new(1, 1, 0)
						TextLabel.TextStrokeTransparency = 0.3
						TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
						TextLabel.Text = "Key"
						TextLabel.ZIndex = 10

						local a = Instance.new("BoxHandleAdornment")
						a.Name = roomkey.Name:lower().."_keyESP"
						a.Parent = BillboardGui
						a.Adornee = roomkey
						a.AlwaysOnTop = true
						a.ZIndex = 0
						a.Size = roomkey.Size
						a.Transparency = 0.45
						a.Color3 = Color3.new(1, 1, 0)
					else
					end
				end
			end
		end)
	end)

	task.spawn(function()
		workspace.Game.Rooms.DescendantAdded:Connect(function(bits)
			if bits.Name:lower() == "bit" then
				if bitESP then
					base = bits:IsA("BasePart")
					if base then
						local BillboardGui = Instance.new("BillboardGui")
						local TextLabel = Instance.new("TextLabel")
						BillboardGui.Adornee = bits
						BillboardGui.Name = bits.Name
						BillboardGui.Parent = bits
						BillboardGui.Size = UDim2.new(0, 100, 0, 150)
						BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
						BillboardGui.AlwaysOnTop = true
						TextLabel.Parent = BillboardGui
						TextLabel.BackgroundTransparency = 1
						TextLabel.Position = UDim2.new(0, 0, 0, -50)
						TextLabel.Size = UDim2.new(0, 100, 0, 100)
						TextLabel.Font = Enum.Font.SourceSansSemibold
						TextLabel.TextSize = 17
						TextLabel.TextColor3 = Color3.new(1, 0.666667, 0)
						TextLabel.TextStrokeTransparency = 0.3
						TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
						TextLabel.Text = bits.Name
						TextLabel.ZIndex = 10

						local a = Instance.new("BoxHandleAdornment")
						a.Name = bits.Name:lower().."_bitESP"
						a.Parent = BillboardGui
						a.Adornee = bits
						a.AlwaysOnTop = true
						a.ZIndex = 0
						a.Size = bits.Size
						a.Transparency = 0.45
						a.Color3 = Color3.new(1, 0.666667, 0)
					else
					end
				else
				end
			end
		end)
	end)

	task.spawn(function()
		workspace.Game.Rooms.DescendantAdded:Connect(function(btry)
			if btry.Name:lower() == "battery" then
				if batteryESP then
					base = btry:IsA("BasePart")
					if base then
						local BillboardGui = Instance.new("BillboardGui")
						local TextLabel = Instance.new("TextLabel")
						BillboardGui.Adornee = btry
						BillboardGui.Name = btry.Name
						BillboardGui.Parent = btry
						BillboardGui.Size = UDim2.new(0, 100, 0, 150)
						BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
						BillboardGui.AlwaysOnTop = true
						TextLabel.Parent = BillboardGui
						TextLabel.BackgroundTransparency = 1
						TextLabel.Position = UDim2.new(0, 0, 0, -50)
						TextLabel.Size = UDim2.new(0, 100, 0, 100)
						TextLabel.Font = Enum.Font.SourceSansSemibold
						TextLabel.TextSize = 17
						TextLabel.TextColor3 = Color3.new(0, 0.666667, 0)
						TextLabel.TextStrokeTransparency = 0.3
						TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
						TextLabel.Text = btry.Name
						TextLabel.ZIndex = 10

						local a = Instance.new("BoxHandleAdornment")
						a.Name = btry.Name:lower().."_batteryESP"
						a.Parent = BillboardGui
						a.Adornee = btry
						a.AlwaysOnTop = true
						a.ZIndex = 0
						a.Size = btry.Size
						a.Transparency = 0.45
						a.Color3 = Color3.new(0, 0.666667, 0)
					else
					end
				else
				end
			end
		end)
	end)

	task.spawn(function()
		game:GetService("RunService").RenderStepped:Connect(function()
		if game.PlaceId==renovation then
			if rotation then
				charRotate(true)
			else
				charRotate(false)
			end
		end
		end)
	end)

	task.spawn(function()
		game:GetService"Players".LocalPlayer.PlayerGui.DescendantAdded:connect(function(txt)
			if txt:IsA'TextLabel' and txt.Parent.Name:lower() == "hintframe" and (txt.Text:lower() == "cannot pick that up." or txt.Text:lower() == "you already have this") then
				wait();
				txt:Destroy()
			end
		end)
	end)

	getgenv().speed = nil
	getgenv().jump = nil
	getgenv().fov = nil
	local manageOver = nil
	local brightLoop = nil
	local ANTIAFK = nil


	local Tab = Window:CreateTab("Main", decalID)

	local Tab1 = Window:CreateTab("ESP", 12544524983)

	local Tab2 = Window:CreateTab("Auto", 69395121)

	local Tab3 = Window:CreateTab("Player", 470645116)

	local Tab5 = Window:CreateTab("Random Stuff", 16354254055)

	local Tab50 = Window:CreateTab("Info/Stats", 2246486837)

	local Tab6 = Window:CreateTab("Trash", 15702284942)

	Tab:CreateButton({
		Name = "Infinite Flashlight",
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.FLASHLIGHT_TOGGLE:FireServer(false, 99999999999999)
		end,
	})

	Tab:CreateButton({
		Name = "God Mode [WIP]",
		Callback = function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/endless-doors/main/ED%20god"))()
		end,
	})

	Tab:CreateToggle({
		Name = "Bypass Overseer",
		CurrentValue = false,
		Flag = "overSeer",
		Callback = function(Value)
			if Value then
				manageOver = workspace.Game.DescendantAdded:Connect(function(seer)
					if seer.Name:lower()=="overseer" then
						wait()
						seer:Destroy()
					end
				end)
				for _,seerover in ipairs(workspace.Game.Entities:GetChildren()) do
					if seerover.Name:lower()=="overseer" then
						seerover:Destroy()
					end
				end
			else
				if manageOver then
					manageOver:Disconnect()
				end
			end
		end,
	})

	Tab:CreateToggle({
		Name = "Disable Fallen Look Script",
		CurrentValue = false,
		Flag = "fallenLook",
		Callback = function(Value)
			if game.PlaceId~=classicED then
				game:GetService("Players").LocalPlayer.PlayerScripts:FindFirstChild("Looking").Enabled = not Value
			else
			end
		end,
	})

	Tab:CreateToggle({
		Name = "Disable Camera Shaking",
		CurrentValue = false,
		Flag = "camShaking",
		Callback = function(Value)
			if game.PlaceId == renovation then
				game:GetService("Players").LocalPlayer.PlayerScripts:FindFirstChild("LocalShaking").Enabled = not Value
				game:GetService("Players").LocalPlayer.PlayerScripts:FindFirstChild("CameraShake").Enabled = not Value
			end
		end,
	})

	Tab:CreateToggle({
		Name = "Full Bright",
		CurrentValue = false,
		Flag = "brightLol",
		Callback = function(Value)
			if Value then
				function brightFunc()
					game:GetService("Lighting").ClockTime = 14
					game:GetService("Lighting").FogEnd = 10000000000
					game:GetService("Lighting").FogStart = 0
					game:GetService("Lighting").GlobalShadows = false
					game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)
				end
				game:GetService("Lighting").Brightness = 3
				for i,v in pairs(game:GetService("Lighting"):GetDescendants()) do
					if v:IsA("Atmosphere") then
						v:Destroy()
					end
				end

				brightLoop = game:GetService("RunService").RenderStepped:Connect(brightFunc)
			else
				if brightLoop then
					brightLoop:Disconnect()
					game:GetService("Lighting").ClockTime = 0
					game:GetService("Lighting").FogEnd = 100000
					game:GetService("Lighting").GlobalShadows = false
					game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)
					game:GetService("Lighting").Brightness = 1
				end
			end
		end,
	})

	Tab:CreateToggle({
		Name = "Anti AFK",
		CurrentValue = false,
		Flag = "antiAFK",
		Callback = function(Value)
			if Value then
				ANTIAFK = game:GetService("Players").LocalPlayer.Idled:connect(function()
					game:FindService("VirtualUser"):Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
					task.wait(1)
					game:FindService("VirtualUser"):Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
				end)
			else
				if ANTIAFK then
					ANTIAFK:Disconnect()
				end
			end
		end,
	})

	Tab:CreateButton({
		Name = "Play Again",
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.PLAY_AGAIN:FireServer()
		end,
	})

Tab:CreateButton({
		Name = "Buy Respawn",
		Callback = function()
			game:GetService("ReplicatedStorage").Remotes.BUY_RESPAWN:FireServer()
		end,
	})


	Tab1:CreateToggle({
		Name = "Entity Esp",
		CurrentValue = false,
		Flag = "entityESP",
		Callback = function(Value)
			entityEsp=Value
			if not Value then
				for _,espRemove in ipairs(workspace.Game.Entities:GetDescendants()) do
					if espRemove:IsA("BoxHandleAdornment") and espRemove.Name:sub(-11) == '_EndlessESP'  then
						espRemove.Parent:Destroy()
					end
				end
			else
				for _, gj in ipairs(workspace.Game.Entities:GetChildren()) do
					check = gj:IsA("Model")
					base = gj:IsA("BasePart")
					if check then
						local BillboardGui = Instance.new("BillboardGui")
						local TextLabel = Instance.new("TextLabel")
						BillboardGui.Adornee = gj:FindFirstChildOfClass("Part")
						BillboardGui.Name = gj.Name
						BillboardGui.Parent = gj
						BillboardGui.Size = UDim2.new(0, 100, 0, 150)
						BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
						BillboardGui.AlwaysOnTop = true
						TextLabel.Parent = BillboardGui
						TextLabel.BackgroundTransparency = 1
						TextLabel.Position = UDim2.new(0, 0, 0, -50)
						TextLabel.Size = UDim2.new(0, 100, 0, 100)
						TextLabel.Font = Enum.Font.SourceSansSemibold
						TextLabel.TextSize = 17
						TextLabel.TextColor3 = Color3.new(1, 0, 0)
						TextLabel.TextStrokeTransparency = 0.3
						TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
						TextLabel.Text = '['..gj.Name..']'
						TextLabel.ZIndex = 10

						local a = Instance.new("BoxHandleAdornment")
						a.Name = gj.Name:lower().."_EndlessESP"
						a.Parent = BillboardGui
						a.Adornee = gj
						a.AlwaysOnTop = true
						a.ZIndex = 0
						a.Transparency = 0.45
						a.Color3 = Color3.new(1, 0, 0)
					elseif base then
						local BillboardGui = Instance.new("BillboardGui")
						local TextLabel = Instance.new("TextLabel")
						BillboardGui.Adornee = gj
						BillboardGui.Name = gj.Name
						BillboardGui.Parent = gj
						BillboardGui.Size = UDim2.new(0, 100, 0, 150)
						BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
						BillboardGui.AlwaysOnTop = true
						TextLabel.Parent = BillboardGui
						TextLabel.BackgroundTransparency = 1
						TextLabel.Position = UDim2.new(0, 0, 0, -50)
						TextLabel.Size = UDim2.new(0, 100, 0, 100)
						TextLabel.Font = Enum.Font.SourceSansSemibold
						TextLabel.TextSize = 17
						TextLabel.TextColor3 = Color3.new(1, 0, 0)
						TextLabel.TextStrokeTransparency = 0.3
						TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
						TextLabel.Text = '['..gj.Name..']'
						TextLabel.ZIndex = 10

						local a = Instance.new("BoxHandleAdornment")
						a.Name = gj.Name:lower().."_EndlessESP"
						a.Parent = BillboardGui
						a.Adornee = gj
						a.AlwaysOnTop = true
						a.ZIndex = 0
						a.Size = gj.Size
						a.Transparency = 0.45
						a.Color3 = Color3.new(1, 0, 0)
					else
					end
				end
			end
		end,
	})

	Tab1:CreateToggle({
		Name = "Key Esp",
		CurrentValue = false,
		Flag = "KeyESP",
		Callback = function(Value)
			keyESP=Value
			if not Value then
				for _,espRemove in ipairs(workspace.Game.Rooms:GetDescendants()) do
					if espRemove:IsA("BoxHandleAdornment") and espRemove.Name:sub(-7) == '_keyESP'  then
						espRemove.Parent:Destroy()
					end
				end
			else
				for _,roomkey in ipairs(workspace.Game.Rooms:GetDescendants()) do
					if roomkey.Name:lower() == "roomkey" and roomkey.Parent.Name:lower() ~= "door" and roomkey:IsA("BasePart") then
						local BillboardGui = Instance.new("BillboardGui")
						local TextLabel = Instance.new("TextLabel")
						BillboardGui.Adornee = roomkey
						BillboardGui.Name = roomkey.Name
						BillboardGui.Parent = roomkey
						BillboardGui.Size = UDim2.new(0, 100, 0, 150)
						BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
						BillboardGui.AlwaysOnTop = true
						TextLabel.Parent = BillboardGui
						TextLabel.BackgroundTransparency = 1
						TextLabel.Position = UDim2.new(0, 0, 0, -50)
						TextLabel.Size = UDim2.new(0, 100, 0, 100)
						TextLabel.Font = Enum.Font.SourceSansSemibold
						TextLabel.TextSize = 17
						TextLabel.TextColor3 = Color3.new(1, 1, 0)
						TextLabel.TextStrokeTransparency = 0.3
						TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
						TextLabel.Text = "Key"
						TextLabel.ZIndex = 10

						local a = Instance.new("BoxHandleAdornment")
						a.Name = roomkey.Name:lower().."_keyESP"
						a.Parent = BillboardGui
						a.Adornee = roomkey
						a.AlwaysOnTop = true
						a.ZIndex = 0
						a.Size = roomkey.Size
						a.Transparency = 0.45
						a.Color3 = Color3.new(1, 1, 0)
					end
				end
			end
		end,
	})

	Tab1:CreateToggle({
		Name = "Bits Esp",
		CurrentValue = false,
		Flag = "BitsESP",
		Callback = function(Value)
			bitESP=Value
			if not Value then
				for _,espRemove in ipairs(workspace.Game.Rooms:GetDescendants()) do
					if espRemove:IsA("BoxHandleAdornment") and espRemove.Name:sub(-7) == '_bitESP'  then
						espRemove.Parent:Destroy()
					end
				end
			else
				for _,bits in ipairs(workspace.Game.Rooms:GetDescendants()) do
					if bits.Name:lower() == "bit" and bits:IsA("BasePart") then
						local BillboardGui = Instance.new("BillboardGui")
						local TextLabel = Instance.new("TextLabel")
						BillboardGui.Adornee = bits
						BillboardGui.Name = bits.Name
						BillboardGui.Parent = bits
						BillboardGui.Size = UDim2.new(0, 100, 0, 150)
						BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
						BillboardGui.AlwaysOnTop = true
						TextLabel.Parent = BillboardGui
						TextLabel.BackgroundTransparency = 1
						TextLabel.Position = UDim2.new(0, 0, 0, -50)
						TextLabel.Size = UDim2.new(0, 100, 0, 100)
						TextLabel.Font = Enum.Font.SourceSansSemibold
						TextLabel.TextSize = 17
						TextLabel.TextColor3 = Color3.new(1, 0.666667, 0)
						TextLabel.TextStrokeTransparency = 0.3
						TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
						TextLabel.Text = bits.Name
						TextLabel.ZIndex = 10

						local a = Instance.new("BoxHandleAdornment")
						a.Name = bits.Name:lower().."_bitESP"
						a.Parent = BillboardGui
						a.Adornee = bits
						a.AlwaysOnTop = true
						a.ZIndex = 0
						a.Size = bits.Size
						a.Transparency = 0.45
						a.Color3 = Color3.new(1, 0.666667, 0)
					end
				end
			end
		end,
	})

	Tab1:CreateToggle({
		Name = "Battery Esp",
		CurrentValue = false,
		Flag = "BatteryESP",
		Callback = function(Value)
			batteryESP=Value
			if not Value then
				for _,espRemove in ipairs(workspace.Game.Rooms:GetDescendants()) do
					if espRemove:IsA("BoxHandleAdornment") and espRemove.Name:sub(-11) == '_batteryESP'  then
						espRemove.Parent:Destroy()
					end
				end
			else
				for _,btry in ipairs(workspace.Game.Rooms:GetDescendants()) do
					if btry.Name:lower() == "battery" and btry:IsA("BasePart") then
						local BillboardGui = Instance.new("BillboardGui")
						local TextLabel = Instance.new("TextLabel")
						BillboardGui.Adornee = btry
						BillboardGui.Name = btry.Name
						BillboardGui.Parent = btry
						BillboardGui.Size = UDim2.new(0, 100, 0, 150)
						BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
						BillboardGui.AlwaysOnTop = true
						TextLabel.Parent = BillboardGui
						TextLabel.BackgroundTransparency = 1
						TextLabel.Position = UDim2.new(0, 0, 0, -50)
						TextLabel.Size = UDim2.new(0, 100, 0, 100)
						TextLabel.Font = Enum.Font.SourceSansSemibold
						TextLabel.TextSize = 17
						TextLabel.TextColor3 = Color3.new(0, 0.666667, 0)
						TextLabel.TextStrokeTransparency = 0.3
						TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
						TextLabel.Text = btry.Name
						TextLabel.ZIndex = 10

						local a = Instance.new("BoxHandleAdornment")
						a.Name = btry.Name:lower().."_batteryESP"
						a.Parent = BillboardGui
						a.Adornee = btry
						a.AlwaysOnTop = true
						a.ZIndex = 0
						a.Size = btry.Size
						a.Transparency = 0.45
						a.Color3 = Color3.new(0, 0.666667, 0)
					end
				end
			end
		end,
	})

	--[[Tab2:CreateToggle({
		Name = "Bit Aura",
		CurrentValue = false,
		Flag = "bitAura",
		Callback = function(Value)
			getgenv().bits = Value
		end,
	})

	Tab2:CreateToggle({
		Name = "Key Aura",
		CurrentValue = false,
		Flag = "keyAura",
		Callback = function(Value)
			getgenv().Key = Value
		end,
	})

	Tab2:CreateToggle({
		Name = "Vitamin Aura",
		CurrentValue = false,
		Flag = "VitaminAura",
		Callback = function(Value)
			getgenv().Vita = Value
		end,
	})

	Tab2:CreateToggle({
		Name = "Bandage Aura",
		CurrentValue = false,
		Flag = "BandageAura",
		Callback = function(Value)
			getgenv().Band = Value
		end,
	})

	Tab2:CreateToggle({
		Name = "Lockpick Aura",
		CurrentValue = false,
		Flag = "LockpickAura",
		Callback = function(Value)
			getgenv().LockPick = Value
		end,
	})

	Tab2:CreateToggle({
		Name = "Mysterious Key Aura",
		CurrentValue = false,
		Flag = "MysteriousKeyAura",
		Callback = function(Value)
			getgenv().SusKey = Value
		end,
	})

	Tab2:CreateToggle({
		Name = "Crucifix Aura",
		CurrentValue = false,
		Flag = "CrucifixAura",
		Callback = function(Value)
			getgenv().Crucifix = Value
		end,
	})]]

	Tab2:CreateSection("had to remove the other sections since they were broken and too buggy")
	Tab2:CreateSection("Everything Aura will only work for items that are needed")

	Tab2:CreateToggle({
		Name = "Everything Aura | [WIP]",
		CurrentValue = false,
		Flag = "AuraAll",
		Callback = function(Value)
			getgenv().chaos = Value
		end,
	})



	Tab3:CreateInput({
		Name = "Set WalkSpeed",
		PlaceholderText = "number",
		RemoveTextAfterFocusLost = false,
		Flag = "WSTxt",
		Callback = function(Text)
			getgenv().speed = tonumber(Text)
		end,
	})

	Tab3:CreateToggle({
		Name = "Toggle WalkSpeed",
		CurrentValue = false,
		Flag = "WSspeed",
		Callback = function(Value)
			getgenv().sped = Value
		end,
	})

	Tab3:CreateInput({
		Name = "Set JumpPower",
		PlaceholderText = "number",
		RemoveTextAfterFocusLost = false,
		Flag = "jpTxt",
		Callback = function(Text)
			getgenv().jump = tonumber(Text)
		end,
	})

	Tab3:CreateToggle({
		Name = "Toggle JumpPower",
		CurrentValue = false,
		Flag = "JPtgl",
		Callback = function(Value)
			getgenv().jumpy = Value
		end,
	})

	Tab3:CreateInput({
		Name = "Set FOV",
		PlaceholderText = "number",
		RemoveTextAfterFocusLost = false,
		Flag = "fovTxt",
		Callback = function(Text)
			getgenv().fov = tonumber(Text)
		end,
	})

	Tab3:CreateToggle({
		Name = "Toggle FOV",
		CurrentValue = false,
		Flag = "FovTgl",
		Callback = function(Value)
			getgenv().wide = Value
		end,
	})


	Tab3:CreateToggle({
		Name = "Infinite Jump",
		CurrentValue = false,
		Flag = "infJP",
		Callback = function(Value)
			local InfiniteJumpEnabled = Value
			local infinite=nil
			local mobileInfinite=nil

			if InfiniteJumpEnabled then
				if infinite then
					infinite:Disconnect()
					infinite=nil
				end
				infinite = game:GetService("UserInputService").JumpRequest:Connect(function()
					game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
				end)
				if IsOnMobile and game.PlaceId == renovation then
					local controls = require(game:GetService("Players").LocalPlayer.PlayerScripts.PlayerModule):GetControls()
					controls:Enable()
					local cmdlp = game:GetService("Players").LocalPlayer
					cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)

					local jumpbtn = cmdlp.PlayerGui.TouchControls.MobileControls.JumpButton
					local run = false
					
					if mobileInfinite then
						mobileInfinite:Disconnect()
						mobileInfinite=nil
					end

					mobileInfinite = jumpbtn.MouseButton1Click:Connect(function()
						run = not run
						game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):ChangeState("Jumping")
					end)
				end
			else
				if infinite then
					infinite:Disconnect()
					infinite=nil
				end
				if mobileInfinite then
					mobileInfinite:Disconnect()
					mobileInfinite=nil
				end
			end
		end,
	})

	Tab3:CreateToggle({
		Name = "Character Rotation",
		CurrentValue = true,
		Flag = "charRotate",
		Callback = function(Value)
			rotation=Value
		end,
	})

	Tab5:CreateButton({
		Name = "Hide Value",
		Callback = function()
			game:GetService("Players").LocalPlayer.Character.Hiding.Value = not game:GetService("Players").LocalPlayer.Character.Hiding.Value
		end    
	})

	Tab5:CreateButton({
		Name = "Teleport to Door",
		Callback = function()
			spawn(teleporttodoor)
		end,
	})

	Tab5:CreateToggle({
		Name = "Loop Teleport To Door",
		CurrentValue = false,
		Callback = function(val)
			getgenv().teletodoor = val

			while getgenv().teletodoor and task.wait(.3) do
				pcall(function()
					spawn(teleporttodoor)
				end)
			end
		end,
	})

	Tab5:CreateButton({
		Name = "Teleport to Key",
		Callback = function()
			spawn(teleporttokey)
		end,
	})

	Tab5:CreateToggle({
		Name = "Loop Teleport To Key",
		CurrentValue = false,
		Callback = function(val)
			getgenv().teletokey = val

			while getgenv().teletokey and wait(.5) do
				pcall(function()
					spawn(teleporttokey)
				end)
			end
		end,
	})

	Tab5:CreateSection("")
	Tab5:CreateSection("idk why i even added this")



	getgenv().Notifv1 = "Door"

	Tab5:CreateInput({
		Name = "Notification Text",
		PlaceholderText = "Text",
		RemoveTextAfterFocusLost = false,
		Flag = "notifTxt",
		Callback = function(Text)
			getgenv().Notifv1 = Text
		end,
	})

	Tab5:CreateButton({
		Name = "Send Notification",
		Callback = function()
			Rayfield:Notify({
				Title = "Notification",
				Content = getgenv().Notifv1,
				Duration = 3,
				Image = decalID,
			})
		end,
	})

	Tab50:CreateSection("Player Stats")

	rmtxt = Tab50:CreateLabel("Rooms: "..playerRoom())
	bittxt = Tab50:CreateLabel("Bits: "..playerBits())
	doubleBits = Tab50:CreateLabel("Double Bits: "..x2bits())
	if game.PlaceId == renovation then
		fames = Tab50:CreateLabel("Fame: "..fame())
		dies = Tab50:CreateLabel("Deaths: "..deaths())
		inRift = Tab50:CreateLabel("Rift: "..rifted())
		joinedGroup = Tab50:CreateLabel("Joined Group: "..inGroup())
	end

	Tab50:CreateSection("")

	Tab50:CreateSection("Game Info")

	curtxt = Tab50:CreateLabel("Current Room: "..curRoom())
	philMeter = Tab50:CreateLabel("Phil Chance: "..philChance())
	spiderChance = Tab50:CreateLabel("Spider Chance: "..tamara())
	if game.PlaceId ~= classicED then
		RevCount = Tab50:CreateLabel("Revive Price: "..revPrice())
	end
	plrAlives = Tab50:CreateLabel("Players Alive: "..AlivePlrs())
	plrInGame = Tab50:CreateLabel("Players In Game: "..inGamePlrs())
	if game.PlaceId == renovation then
		Tab50:CreateSection("")
		Tab50:CreateSection("Collectibles")

		Fuzzi = Tab50:CreateLabel("Fuzzi: "..fuz())
		Zav = Tab50:CreateLabel("Zav: "..zavv())
		Jake = Tab50:CreateLabel("Jake: "..jaek())
		Blue = Tab50:CreateLabel("Blue: "..cyan())
		Alan = Tab50:CreateLabel("Alan: "..alen())
	end

	task.spawn(function()
		game:GetService("RunService").RenderStepped:Connect(function()
			pcall(function()
				rmtxt:Set("Rooms: "..playerRoom())
				bittxt:Set("Bits: "..playerBits())
				doubleBits:Set("Double Bits: "..x2bits())

				curtxt:Set("Current Room: "..curRoom())
				philMeter:Set("Phil Chance: "..philChance())
				spiderChance:Set("Spider Chance: "..tamara())
				if game.PlaceId ~= classicED then
					RevCount:Set("Revive Price: "..revPrice())
				end
				plrAlives:Set("Players Alive: "..AlivePlrs())
				plrInGame:Set("Players In Game: "..inGamePlrs())

				if game.PlaceId == renovation  then
					fames:Set("Fame: "..fame())
					dies:Set("Deaths: "..deaths())
					inRift:Set("Rift: "..rifted())
					joinedGroup:Set("Joined Group: "..inGroup())

					Fuzzi:Set("Fuzzi: "..fuz())
					Zav:Set("Zav: "..zavv())
					Jake:Set("Jake: "..jaek())
					Blue:Set("Blue: "..cyan())
					Alan:Set("Alan: "..alen())
				end
			end)
		end)
	end)

	Tab6:CreateButton({
		Name = "Destroy Gui",
		Callback = function()
			Rayfield:Destroy()
		end,
	})

	if game.PlaceId==classicED then
		Rayfield:Notify({
			Title = "Info",
			Content = "Door Aura has been disabled on this mode due to tamara",
			Duration = 7,
			Image = decalID,
		})
	end

	Rayfield:LoadConfiguration()

	-- auras
	task.spawn(function()
		game:GetService("RunService").RenderStepped:Connect(function()
			if getgenv().bits then
				pcall(function()
					for _, room in ipairs(workspace.Game.Rooms:GetChildren()) do
						for _, v in pairs(room:GetDescendants()) do
							local bitVal = game:GetService("Players").LocalPlayer.leaderstats.Bits
							if (game.PlaceId == epicmode or game.PlaceId == EMArchive) and bitVal.Value >= 2500 then
							else
								processObject(v, "bit")
							end
						end
					end
				end)
			end
		end)
		game:GetService("RunService").RenderStepped:Connect(function()
			if getgenv().Key then
				pcall(function()
					for _, room in ipairs(workspace.Game.Rooms:GetChildren()) do
						for _, v in pairs(room:GetDescendants()) do
							processObject(v, "roomkey")
						end
					end
				end)

			end
		end)
		game:GetService("RunService").RenderStepped:Connect(function()
			if getgenv().Vita then
				pcall(function()
					for _, room in ipairs(workspace.Game.Rooms:GetChildren()) do
						for _, v in pairs(room:GetDescendants()) do

							processObject(v, "vitamins")
						end
					end
				end)
			end
		end)
		game:GetService("RunService").RenderStepped:Connect(function()
			if getgenv().Band then
				pcall(function()
					for _, room in ipairs(workspace.Game.Rooms:GetChildren()) do
						for _, v in pairs(room:GetDescendants()) do
							processObject(v, "bandage")
						end
					end
				end)
			end
		end)
		game:GetService("RunService").RenderStepped:Connect(function()
			if getgenv().LockPick then
				pcall(function()
					for _, room in ipairs(workspace.Game.Rooms:GetChildren()) do
						for _, v in pairs(room:GetDescendants()) do
							processObject(v, "lockpick")
						end
					end
				end)
			end
		end)
		game:GetService("RunService").RenderStepped:Connect(function()
			if getgenv().SusKey then
				pcall(function()
					for _, room in ipairs(workspace.Game.Rooms:GetChildren()) do
						for _, v in pairs(room:GetDescendants()) do
							processObject(v, "mysterious key")
						end
					end
				end)
			end
		end)
		game:GetService("RunService").RenderStepped:Connect(function()
			if getgenv().Crucifix then
				pcall(function()
					for _, v in pairs(workspace.Game.Rooms:GetDescendants()) do
						processObject(v, "crucifix")
					end
				end)
			end
		end)

game:GetService("RunService").RenderStepped:Connect(function()
			if getgenv().chaos then
				pcall(function()
				--if tick() - r > d then
				--r = tick()
					for _, room in ipairs(workspace.Game.Rooms:GetChildren()) do
						for _, v in ipairs(room:GetDescendants()) do
							if v:IsA("ProximityPrompt") and v.Name == "ProximityPrompt" then
								local bitVal = game:GetService("Players").LocalPlayer.leaderstats.Bits
								local h = 0
								if game.PlaceId ~= renovation then
									h=6
								end
								local maxDistance = v.MaxActivationDistance + h
								if (v.Parent.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= maxDistance then
									if (game.PlaceId == epicmode or game.PlaceId == EMArchive) then
										if (bitVal.Value >= 2500 and v.Parent.Name:lower() ~= "bit") then
											fireproximityprompt(v,1)
										elseif bitVal.Value < 2500 then
											fireproximityprompt(v,1)
										end
									elseif game.PlaceId==classicED then
										if v.Parent.Name:lower() == "handle" then
										else
											fireproximityprompt(v,1)
										end
									else
										fireproximityprompt(v,1)
									end
								end
							end
						end
					end
					--end
				end)
			end
		end)
	end)



	-- player stuff
	task.spawn(function()
		game:GetService("RunService").RenderStepped:Connect(function()
			if getgenv().sped then
				pcall(function()
					game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = getgenv().speed
				end)
			end
		end)
		game:GetService("RunService").RenderStepped:Connect(function()
			if getgenv().jumpy then
				pcall(function()
					game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = getgenv().jump
				end)
			end
		end)
		game:GetService("RunService").RenderStepped:Connect(function()
			if getgenv().wide then
				pcall(function()
					num = (getgenv().fov or 70)
					local hh=game:GetService("TweenService"):Create(workspace.CurrentCamera, TweenInfo.new(0, Enum.EasingStyle.Linear), {FieldOfView=tonumber(num)})
					hh:Play()
				end)
			end
		end)
	end)
end
