local GetService = game.GetService
 iamcore = game:GetService("CoreGui")
if not game:IsLoaded() then
	local waiting = Instance.new("Message")
	waiting.Parent = iamcore
	waiting.Text = 'waiting for the game to load'
	game.Loaded:Wait()
	waiting:Destroy()
end

if game.GameId == 3927488489 and (game.PlaceId == 10891480658 or game.PlaceId == 16810788519) then

local txt = "nil"

if game.PlaceId == 10891480658 then
txt = "Endless Doors"
elseif game.PlaceId == 16810788519 then
txt = "Endless Doors [Epic Mode]"
end

task.wait();

task.spawn(function()
task.wait(1.5)
for _,orio in ipairs(game.CoreGui:WaitForChild("Orion"):GetChildren()) do
orio.Position = UDim2.new(0.43, -307, 0.3, -172)
end
end)

game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
            fireproximityprompt(prompt)
        end)

function fallDMG()
		local Part = "FDMG"
		 
		local femboy = game:GetDescendants()
		for i = 1, #femboy do local v = femboy[i]
		if v.Name == Part then
repeat wait() until v
		v:Destroy()
		end
		end
end

function dark()
local Part = "InDarkRoom"

		local femboy = game:GetDescendants()
		for i = 1, #femboy do local v = femboy[i]
		if v.Name == Part then
repeat wait() until v
                v.Value = false
task.wait();
		v:Destroy()
		end
		end
end

task.spawn(function()
spawn(fallDMG)
spawn(dark)
game.Players.LocalPlayer.CharacterAdded:Connect(function()
spawn(fallDMG)
spawn(dark)
end)
end)

task.spawn(function()
game.workspace.DescendantAdded:Connect(function(seer)
if (seer:IsA("Model") or seer:IsA("BasePart")) and seer.Name == "Overseer" then
repeat wait() until seer
seer:Destroy()
end
end)
end)

task.spawn(function()
game.workspace.DescendantAdded:Connect(function(lamp)
if lamp:IsA("BasePart") and lamp.Name == "BrokenLamp" then
repeat wait() until lamp
lamp:Destroy()
end
end)
end)

task.spawn(function()
game.workspace.DescendantAdded:Connect(function(abyss)
if abyss:IsA("BasePart") and abyss.Name == "AbyssKill" then
repeat wait() until abyss
abyss:Destroy()
end
end)
end)

game.Players.LocalPlayer.Character.Humanoid.AutoJumpEnabled = false

wait(0.3)

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = txt, HidePremium = false, IntroText = "", SaveConfig = false, IntroIcon = "rbxassetid://13361894613", ConfigFolder = "Endless"})

getgenv().speed = nil
getgenv().jump = nil
getgenv().fov = nil


local Tab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://13361894613",
	PremiumOnly = false
})

local Tab2 = Window:MakeTab({
	Name = "Auto",
	Icon = "rbxassetid://69395121",
	PremiumOnly = false
})

local Tab3 = Window:MakeTab({
	Name = "Player",
	Icon = "rbxassetid://470645116",
	PremiumOnly = false
})

local Tab4 = Window:MakeTab({
	Name = "Credits",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Tab5 = Window:MakeTab({
	Name = "random stuff",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})


local Tab6 = Window:MakeTab({
	Name = "Trash",
	Icon = "rbxassetid://145360650",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "Infinite Flashlight",
	Callback = function()
      		local ohBoolean1 = false
		local ohNumber2 = 99999999
		
		game:GetService("ReplicatedStorage").Remotes.FLASHLIGHT_TOGGLE:FireServer(ohBoolean1, ohNumber2)
  	end    
})

Tab:AddButton({
	Name = "SetUp",
	Callback = function()
      		game:GetService("Players").LocalPlayer.DevEnableMouseLock = false
			game:GetService("Players").LocalPlayer.CameraMaxZoomDistance = 9999999
			game:GetService("Players").LocalPlayer.CameraMinZoomDistance = 0
			game:GetService("Players").LocalPlayer.CameraMode = "Classic"
  	end    
})

Tab:AddToggle({
	Name = "Delete Battery's",
	Default = false,
	Save = true,
	Callback = function(Value)
		_G.battery = Value
		while _G.battery == true do

		local Part = "Battery"
		
		local femboy = game:GetDescendants()
		for i = 1, #femboy do local v = femboy[i]
		if v.Name == Part then
		v:Destroy()
		end
		end
		wait(0.6)
		end
	end    
})


Tab:AddToggle({
	Name = "Delete Walls [wip]",
	Default = false,
	Save = true,
	Callback = function(Value)
	_G.walls = Value
	while _G.walls == true do
	-- Name
	local Part = "Wall"
	 
	-- Script
	local femboy = game:GetDescendants()
	for i = 1, #femboy do local v = femboy[i]
	if v.Name == Part then
	v:Destroy()
	end
	end
	
	-- Name
	local Part = "Barrier"
	 
	-- Script
	local femboy = game:GetDescendants()
	for i = 1, #femboy do local v = femboy[i]
	if v.Name == Part then
	v:Destroy()
	end
	end
	
	wait(0.5)

	-- Name
	local Part = "Barricade"
	 
	-- Script
	local femboy = game:GetDescendants()
	for i = 1, #femboy do local v = femboy[i]
	if v.Name == Part then
	v:Destroy()
	end
	end
	
	
	-- Name
	local Part = "Brick"
	 
	-- Script
	local femboy = game:GetDescendants()
	for i = 1, #femboy do local v = femboy[i]
	if v.Name == Part then
	v:Destroy()
	end
	end
	wait(3)
	end
		end    
	})

local Section = Tab2:AddSection({
	Name = "Still in beta so don't expect it to work properly"
})

Tab2:AddToggle({
	Name = "Bit Aura",
	Default = false,
	Save = true,
	Callback = function(Value)
		_G.bits = Value

while _G.bits do
    for i, v in pairs(game.Workspace:GetDescendants()) do
        if v.Name == "Bit" and v:IsA("BasePart") then
            local proximityPrompt = v:FindFirstChildOfClass("ProximityPrompt")
            if proximityPrompt then
                local maxDistance = proximityPrompt.MaxActivationDistance
                if (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= maxDistance then
                    proximityPrompt:InputHoldBegin()
                end
            end
        end
    end
    wait(0.1)
end
	end    
})

Tab2:AddToggle({
	Name = "Key Aura",
	Default = false,
	Save = true,
	Callback = function(Value)
		_G.Key = Value

while _G.Key do
    for i, v in pairs(game.Workspace:GetDescendants()) do
        if v.Name == "RoomKey" and v:IsA("BasePart") then
            local proximityPrompt = v:FindFirstChildOfClass("ProximityPrompt")
            if proximityPrompt then
                local maxDistance = proximityPrompt.MaxActivationDistance
                if (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= maxDistance then
                    proximityPrompt:InputHoldBegin()
                end
            end
        end
    end
    wait(0.1)
end
	end    
})

Tab2:AddToggle({
	Name = "Vitamin Aura",
	Default = false,
	Save = true,
	Callback = function(Value)
		getgenv().Vita = Value

while getgenv().Vita do
    pcall(function()
        for i, v in pairs(game.Workspace:GetDescendants()) do
            if v.Name == "Vitamins" and v:IsA("BasePart") then
                local proximityPrompt = v:FindFirstChildOfClass("ProximityPrompt")
                if proximityPrompt then
                    local maxDistance = proximityPrompt.MaxActivationDistance
                    if (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= maxDistance then
                        proximityPrompt:InputHoldBegin()
                    end
                end
            end
        end
    end)
    wait(0.1)
end
	end    
})

Tab2:AddToggle({
	Name = "Bandage Aura",
	Default = false,
	Save = true,
	Callback = function(Value)
		getgenv().Band = Value

while getgenv().Band do
    pcall(function()
        for i, v in pairs(game.Workspace:GetDescendants()) do
            if v.Name == "Bandage" and v:IsA("BasePart") then
                local proximityPrompt = v:FindFirstChildOfClass("ProximityPrompt")
                if proximityPrompt then
                    local maxDistance = proximityPrompt.MaxActivationDistance
                    if (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= maxDistance then
                        proximityPrompt:InputHoldBegin()
                    end
                end
            end
        end
    end)
    wait(0.1)
end
	end    
})

Tab2:AddToggle({
	Name = "Lockpick Aura",
	Default = false,
	Save = true,
	Callback = function(Value)
		getgenv().LockPick = Value

while getgenv().LockPick do
    pcall(function()
        for i, v in pairs(game.Workspace:GetDescendants()) do
            if v.Name == "Lockpick" and v:IsA("BasePart") then
                local proximityPrompt = v:FindFirstChildOfClass("ProximityPrompt")
                if proximityPrompt then
                    local maxDistance = proximityPrompt.MaxActivationDistance
                    if (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= maxDistance then
                        proximityPrompt:InputHoldBegin()
                    end
                end
            end
        end
    end)
    wait(0.1)
end
	end    
})

Tab2:AddToggle({
	Name = "Mysterious Key Aura",
	Default = false,
	Save = true,
	Callback = function(Value)
		getgenv().SusKey = Value

while getgenv().SusKey do
    pcall(function()
        for i, v in pairs(game.Workspace:GetDescendants()) do
            if v.Name == "Mysterious Key" and v:IsA("BasePart") then
                local proximityPrompt = v:FindFirstChildOfClass("ProximityPrompt")
                if proximityPrompt then
                    local maxDistance = proximityPrompt.MaxActivationDistance
                    if (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= maxDistance then
                        proximityPrompt:InputHoldBegin()
                    end
                end
            end
        end
    end)
    wait(0.1)
end
	end    
})

Tab2:AddToggle({
	Name = "Crucifix Aura",
	Default = false,
	Save = true,
	Callback = function(Value)
		getgenv().Crucifix = Value

while getgenv().Crucifix do
    pcall(function()
        for i, v in pairs(game.Workspace:GetDescendants()) do
            if v.Name == "Crucifix" and v:IsA("BasePart") then
                local proximityPrompt = v:FindFirstChildOfClass("ProximityPrompt")
                if proximityPrompt then
                    local maxDistance = proximityPrompt.MaxActivationDistance
                    if (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= maxDistance then
                        proximityPrompt:InputHoldBegin()
                    end
                end
            end
        end
    end)
    wait(0.1)
end
	end    
})

local Section = Tab2:AddSection({
	Name = ""
})
local Section = Tab2:AddSection({
	Name = ""
})
local Section = Tab2:AddSection({
	Name = ""
})
local Section = Tab2:AddSection({
	Name = ""
})
local Section = Tab2:AddSection({
	Name = ""
})
local Section = Tab2:AddSection({
	Name = ""
})
local Section = Tab2:AddSection({
	Name = ""
})

Tab2:AddToggle({
	Name = "Trigger Everything [not wardrobes]",
	Default = false,
	Callback = function(Value)
		getgenv().chaos = Value;

                while getgenv().chaos and task.wait() do
                        pcall(function()
                               for _, v in ipairs(game:GetService("Workspace"):GetDescendants()) do
    if v:IsA("ProximityPrompt") and v.Name == "ProximityPrompt" then
        local maxDistance = v.MaxActivationDistance + 5
        if (v.Parent.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= maxDistance then
            fireproximityprompt(v, 0)
        end
    end
end
                        end)
                end
	end    
})



Tab3:AddTextbox({
	Name = "Set WalkSpeed",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
		getgenv().speed = Value
	end	  
})

Tab3:AddToggle({
	Name = "Toggle WalkSpeed",
	Default = false,
	Callback = function(Value)
		getgenv().sped = Value;

                while getgenv().sped and task.wait() do
                        pcall(function()
                               game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = getgenv().speed
                        end)
                end
	end    
})

Tab3:AddTextbox({
	Name = "Set JumpPower",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
		getgenv().jump = Value
	end	  
})

Tab3:AddToggle({
	Name = "Toggle JumpPower",
	Default = false,
	Callback = function(Value)
		getgenv().jumpy = Value;

                while getgenv().jumpy and task.wait() do
                        pcall(function()
                               game.Players.LocalPlayer.Character.Humanoid.JumpPower = getgenv().jump
                        end)
                end
	end    
})

Tab3:AddTextbox({
	Name = "Set FOV",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
		getgenv().fov = Value
	end	  
})

Tab3:AddToggle({
	Name = "Toggle FOV",
	Default = false,
	Callback = function(Value)
		getgenv().wide = Value;

                while getgenv().wide and task.wait() do
                        pcall(function()
                               game.Workspace.CurrentCamera.FieldOfView = getgenv().fov
                        end)
                end
	end    
})


Tab3:AddToggle({
	Name = "Infinite Jump",
	Default = false,
	Callback = function(Value)
		local InfiniteJumpEnabled = Value

if InfiniteJumpEnabled then
infinite = game:GetService("UserInputService").JumpRequest:Connect(function()   game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
end)
else
if infinite then
infinite:Disconnect()
end
end
	end    
})


local Section = Tab4:AddSection({
	Name = "maxype | Scripter (did mostly everything)"
})

local Section = Tab4:AddSection({
	Name = "mixalispantidos12 | Tester, Helper (helped with bypass)"
})


Tab5:AddToggle({
	Name = "hide value",
	Default = false,
	Callback = function(Value)
		game:GetService("Players").LocalPlayer.Character.Hiding.Value = Value
	end    
})

Tab6:AddButton({
	Name = "End Gui",
	Callback = function()
      		OrionLib:Destroy()
  	end    
})

OrionLib:Init()

end