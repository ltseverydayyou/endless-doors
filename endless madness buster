if (game.GameId == 3927488489 or game.GameId == 5927366432 or game.GameId == 6023940812) and (game.PlaceId == 10891480658 or game.PlaceId == 16810788519 or game.PlaceId == 17324650150 or game.PlaceId == 17639491565 or game.PlaceId == 17594182379) then

	function SafeGetService(name)
		local service = game:GetService(name)
		return if cloneref then cloneref(service) else service
	end

	function guiCHECKINGAHHHHH()
		return (gethui and gethui()) or SafeGetService("CoreGui"):FindFirstChild("RobloxGui") or SafeGetService("CoreGui") or SafeGetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
	end

	if not game:IsLoaded() then
		local waiting = Instance.new("Message")
		waiting.Parent = guiCHECKINGAHHHHH()
		waiting.Text = 'waiting for the game to load'
		game.Loaded:Wait()
		waiting:Destroy()
	end

	local oldPlace=10891480658
	local epicmode=16810788519
	local renovation=17324650150
	local EMArchive=17639491565
	local classicED=17594182379

	local decalID=17471548099
	--local UIdecal="rbxassetid://"..decalID
	local plr = SafeGetService("Players").LocalPlayer
	local char = plr.Character or plr.CharacterAdded:Wait()
	local vals = SafeGetService("Workspace"):FindFirstChild("Game"):FindFirstChild("Values")

	local IsOnMobile = false
	if SafeGetService("UserInputService").TouchEnabled then
		IsOnMobile = true
	end
	local items = {}

	function getCharacter()
		return plr and plr.Character
	end

	function getRoot(char)
		if char:IsA("Player") then char = char.Character end
		return char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso") or char:FindFirstChild("UpperTorso") or char:FindFirstChild("LowerTorso") or char:FindFirstChildWhichIsA("BasePart") or nil
	end

	function getValueSafeString(containerName, childName)
		local character = getCharacter()
		if not character then return nil end
	
		local container = character:FindFirstChild(containerName)
		if not container then return nil end
	
		local valueObject = container:FindFirstChild(childName)
		if not valueObject then return nil end
	
		return tostring(valueObject.Value)
	end

	function getValueSafe(containerName, childName)
		local character = getCharacter()
		if not character then return nil end
	
		local container = character:FindFirstChild(containerName)
		if not container then return nil end
	
		local valueObject = container:FindFirstChild(childName)
		if not valueObject then return nil end
	
		return tostring(valueObject.Value)
	end

	function teleportToDoor()
		local Players = SafeGetService("Players")
		local Workspace = SafeGetService("Workspace")
		local LocalPlayer = Players.LocalPlayer
		local Rooms = Workspace.Game.Rooms
		local curRoom = vals.RoomsNumber.Value
		local room = Rooms:FindFirstChild("Room"..curRoom)
		if room then
			local door = room:FindFirstChild("Door")
			if door then
				LocalPlayer.Character:PivotTo(door:GetPivot())
			end
		end
	end
	
	function teleportToKey()
		if not hasKEYY() then return end
		local Players = SafeGetService("Players")
		local Workspace = SafeGetService("Workspace")
		local LocalPlayer = Players.LocalPlayer
		local Rooms = Workspace.Game.Rooms
		local curRoom = vals.RoomsNumber.Value
		local room = Rooms:FindFirstChild("Room"..curRoom)
		if room then
			for _, descendant in ipairs(room:GetDescendants()) do
				if descendant:IsA("BasePart") and descendant.Name:lower() == "roomkey" and descendant.Parent.Name:lower() ~= "door" then
					LocalPlayer.Character:PivotTo(descendant:GetPivot())
					break
				end
			end
		end
	end
	
	function teleportToLever()
		local Players = SafeGetService("Players")
		local Workspace = SafeGetService("Workspace")
		local LocalPlayer = Players.LocalPlayer
		local Rooms = Workspace.Game.Rooms
		local curRoom = vals.RoomsNumber.Value
		local room = Rooms:FindFirstChild("Room"..curRoom)
		if room then
			for _, descendant in ipairs(room:GetDescendants()) do
				if (descendant:IsA("BasePart") or descendant:IsA("Model")) and descendant.Name:lower() == "gatelever" then
					LocalPlayer.Character:PivotTo(descendant:GetPivot())
					break
				end
			end
		end
	end

	function antiRagdoll()
		plr.Character:FindFirstChild("RagdollTrigger").Value=false
	end

	function charRotate(val)
		plr.Character:FindFirstChild("CanRotate").Value=val
	end

	--[[function processObject(v, itemName)
		if tick() - h > p then
			h = tick()
		if (v:IsA("BasePart") or v:IsA("Model") or v:IsA("Folder")) and v.Name:lower() == itemName then
			local proximityPrompt = v:FindFirstChildOfClass("ProximityPrompt")
			if proximityPrompt then
				local maxDistance = proximityPrompt.MaxActivationDistance
				if (v.Position - getRoot(plr.Character).Position).Magnitude <= maxDistance then
					fireproximityprompt(proximityPrompt,1)
				end
			end
		end
	end
	end]]

	local placeNames = {
		[oldPlace] = "Endless Doors [OLD]",
		[epicmode] = "Endless Doors [OLD Epic Mode]",
		[renovation] = "Endless Doors",
		[EMArchive] = "Endless Doors [Epic Mode]",
		[classicED] = "Endless Doors [Retro #classic]"
	}
	
	local baseName = placeNames[game.PlaceId] or "unknown"
	local txt = IsOnMobile and (baseName.." | Mobile") or baseName

	task.wait();

	task.spawn(function()
		while task.wait(2) do
			pcall(function()
				local PlayerGui = plr:FindFirstChild("PlayerGui")
				local WorkspaceGame = SafeGetService("Workspace"):FindFirstChild("Game")
				
				if PlayerGui then
					local MainGUI = PlayerGui:FindFirstChild("MainGUI")
					if MainGUI then
						local Values = MainGUI:FindFirstChild("Values")
						if Values then
							for _, val in ipairs(Values:GetDescendants()) do
								if val:IsA("DoubleConstrainedValue") then
									val.MaxValue = 999999
									val.MinValue = 0
								end
							end
						end
					end
				end
	
				if WorkspaceGame then
					local GameValues = WorkspaceGame:FindFirstChild("Values")
					if GameValues then
						for _, val in ipairs(GameValues:GetDescendants()) do
							if val:IsA("DoubleConstrainedValue") then
								val.MaxValue = 999999
								val.MinValue = 0
							end
						end
					end
				end
			end)
		end
	end)

	--Player Stats

	function playerRoom()
		return tostring(plr.leaderstats.Room.Value)
	end
	function playerBits()
		return tostring(plr.leaderstats.Bits.Value)
	end
	function x2bits()
		return tostring(plr.Character:FindFirstChild("Values"):FindFirstChild("DoubleBits").Value)
	end
	function fame()
		return tostring(plr:FindFirstChild("Fame").Value)
	end
	function deaths()
		return tostring(plr:FindFirstChild("Deaths").Value)
	end
	function rifted()
		return tostring(plr:FindFirstChild("Rift").Value)
	end
	function inGroup()
		return tostring(plr:FindFirstChild("JoinedGroup").Value)
	end

	--Game Info

	function curRoom()
		return tostring(vals.RoomsNumber.Value)
	end
	function philChance()
		return tostring(vals.PhilMeter.Value)
	end
	function tamara()
		return tostring(vals.SpiderChance.Value)
	end
	function revPrice()
		return tostring(vals.RevivePrice.Value)
	end
	function AlivePlrs()
		return tostring(vals.PlayersAlive.Value)
	end
	function inGamePlrs()
		return tostring(vals.PlayersInGame.Value)
	end

	--collectibles

	function fuz()
		return getValueSafeString("Collectibles", "Fuzzi")
	end
	
	function zavv()
		return getValueSafeString("Collectibles", "Zav")
	end
	
	function jaek()
		return getValueSafeString("Collectibles", "Jake")
	end
	
	function cyan()
		return getValueSafeString("Collectibles", "Blue")
	end
	
	function alen()
		return getValueSafeString("Collectibles", "Alan")
	end
	
	function hasKEYY()
		return getValueSafe("Values", "HasKey")
	end

	function CreateESP(target, labelText, color)
		local adornee = target:IsA("Model") and target:FindFirstChildWhichIsA("BasePart") or target
		if not adornee then return end

		local BillboardGui = Instance.new("BillboardGui")
		BillboardGui.Name = "ESP_"..(labelText or adornee.Name)
		BillboardGui.Adornee = adornee
		BillboardGui.Parent = adornee
		BillboardGui.Size = UDim2.new(0, 100, 0, 150)
		BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
		BillboardGui.AlwaysOnTop = true
	
		local TextLabel = Instance.new("TextLabel")
		TextLabel.Parent = BillboardGui
		TextLabel.BackgroundTransparency = 1
		TextLabel.Position = UDim2.new(0, 0, 0, -50)
		TextLabel.Size = UDim2.new(0, 100, 0, 100)
		TextLabel.Font = Enum.Font.SourceSansSemibold
		TextLabel.TextSize = 17
		TextLabel.TextColor3 = color or Color3.new(1, 0, 0)
		TextLabel.TextStrokeTransparency = 0.3
		TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
		TextLabel.Text = "["..(labelText or adornee.Name).."]"
		TextLabel.ZIndex = 10

		local Box = Instance.new("BoxHandleAdornment")
		Box.Name = adornee.Name:lower().."_PEEPEE"
		Box.Adornee = adornee
		Box.Parent = adornee
		Box.AlwaysOnTop = true
		Box.ZIndex = 0
		Box.Transparency = 0.45
		Box.Color3 = color or Color3.new(1, 0, 0)
	
		if adornee:IsA("BasePart") then
			Box.Size = adornee.Size
		else
			Box.Size = Vector3.new(4, 4, 4)
		end
	end

	SafeGetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
		fireproximityprompt(prompt,1)
	end)

	local targets = {
		fdmg = true,
		brokenlamp = true,
		abysskill = true,
		flowergrowth = true,
		longcrate = true,
		crate = true,
		chasetrigger = true,
		spirit = true,
		chair = true,
		sofa = true,
		fire = true
	}
	
	task.spawn(function()
		repeat task.wait() until plr.Character
		task.wait(2)

		for _, descendant in ipairs(game:GetDescendants()) do
			if targets[descendant.Name:lower()] then
				task.defer(function()
					if descendant and descendant.Parent then
						descendant:Destroy()
					end
				end)
			end
		end
	end)

	task.spawn(function()
		if game.PlaceId==renovation then
			while task.wait() do
				antiRagdoll()
			end
		end
	end)

	task.spawn(function()
		SafeGetService("Workspace").DescendantAdded:Connect(function(YESSS)
			if (YESSS:IsA("Model") or YESSS:IsA("BasePart") or YESSS:IsA("ValueBase") or YESSS:IsA("LocalScript")) then
				local name = YESSS.Name:lower()
				if name == "brokenlamp" or name == "chasetrigger" or name == "abysskill" or name == "fdmg"
				or name == "flowergrowth" or name == "longcrate" or name == "crate"
				or name == "spirit" or name == "chair" or name == "sofa" or name == "fire" then
					task.defer(function()
						if YESSS and YESSS.Parent then
							YESSS:Destroy()
						end
					end)
				end
			end
		end)
	end)

	task.spawn(function()
		LOCALLLLPLAYERR=plr
		if LOCALLLLPLAYERR.Character then
			local humanoid = LOCALLLLPLAYERR.Character:FindFirstChildWhichIsA("Humanoid")
			if humanoid then
				humanoid.AutoJumpEnabled = false
			end
		end
		
		LOCALLLLPLAYERR.CharacterAdded:Connect(function(character)
			local humanoid = character:WaitForChild("Humanoid", 5)
			if humanoid then
				humanoid.AutoJumpEnabled = false
			end
		end)
	end)

	local function aC(p)
		if p:IsA("ProximityPrompt") and p.Name == "ProximityPrompt" then
			table.insert(items, p.Parent)
		end
	end

	local function fireItems()
		local character = plr.Character
		local root = character and getRoot(character)
	
		if not (root and root.Parent) then return end
	
		for i = #items, 1, -1 do
			local coin = items[i]
			if not coin then
				table.remove(items, i)
				continue
			end
	
			local pp = coin:FindFirstChildOfClass("ProximityPrompt")
			local bp = coin:IsA("Model") and coin:FindFirstChildWhichIsA("BasePart") or coin
	
			if pp and bp then
				local dist = (root.Position - bp.Position).Magnitude
				local bitVal = plr.leaderstats.Bits
				local maxDistance = pp.MaxActivationDistance + 6
	
				if dist <= maxDistance then
					local greedFlag = false
					for _, child in ipairs(coin:GetChildren()) do
						if child:IsA("BoolValue") and child.Name:lower():find("greed") and child.Value == true then
							greedFlag = true
							break
						end
					end
					if greedFlag then
						continue
					end
	
					local coinName = coin.Name:lower()
	
					if game.PlaceId == epicmode or game.PlaceId == EMArchive then
						if (bitVal.Value >= 2500 and coinName ~= "bit") or (bitVal.Value < 2500) then
							fireproximityprompt(pp, 1)
						end
					elseif game.PlaceId == classicED then
						if coinName ~= "handle" then
							fireproximityprompt(pp, 1)
						end
					else
						fireproximityprompt(pp, 1)
					end
				end
			else
				table.remove(items, i)
			end
		end
	end

	task.wait(0.3)

	local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/ltseverydayyou/Rayfield-backup/main/Rayfield'))()

	local Window = Rayfield:CreateWindow({
		Name = txt,
		LoadingTitle = txt,
		LoadingSubtitle = "zav x fuzzi",
		ConfigurationSaving = {
			Enabled = true,
			FolderName = "Endless Doors",
			FileName = "RENOVATION"
		}
	})
	local entityEsp = false
	local entityNotif = false
	local keyESP = false
	local bitESP = false
	local batteryESP = false
	local rotation = true
	local remoteThingy = false

	task.spawn(function()
		SafeGetService("Players").PlayerAdded:Connect(function(player)
			local name = player.Name
			local displayName = player.DisplayName
			local formatted = (name:lower() == displayName:lower()) and ("@"..name) or (displayName.." (@"..name..")")
	
			Rayfield:Notify({
				Title = "Player Join Log",
				Content = formatted.." Joined",
				Duration = 3,
				Image = decalID,
			})
		end)
	end)

	task.spawn(function()
		SafeGetService("Workspace").Game.Entities.ChildAdded:Connect(function(gj)
			if entityEsp then
				CreateESP(gj)
				if entityNotif then
					task.defer(function()
						Rayfield:Notify({
							Title = "Entity",
							Content = gj.Name.." Has Spawned",
							Duration = 3,
							Image = decalID,
						})
					end)
				end
			end
		end)
	end)

	task.spawn(function()
		vals.MimicActivated:GetPropertyChangedSignal("Value"):Connect(function()
			if entityNotif then
				local text = SafeGetService("Workspace").Game.Values.MimicActivated.Value and "Mimic Is Enabled" or "Mimic Is Disabled"
				task.defer(function()
					Rayfield:Notify({
						Title = "Entity",
						Content = text,
						Duration = 3,
						Image = decalID,
					})
				end)
			end
		end)
	end)

	task.spawn(function()
		SafeGetService("ReplicatedStorage").Remotes:FindFirstChild("E_A", true).OnClientEvent:Connect(function(ent)
			if entityNotif and ent:lower() == "greed" then
				task.defer(function()
					Rayfield:Notify({
						Title = "Entity",
						Content = "Greed Spawned",
						Duration = 3,
						Image = decalID,
					})
				end)
			end
			if remoteThingy then
				task.defer(function()
					Rayfield:Notify({
						Title = "Remote Call",
						Content = "Returned: "..ent,
						Duration = 3,
						Image = decalID,
					})
				end)
			end
		end)
	end)

	task.spawn(function()
		SafeGetService("Workspace").Game.Rooms.DescendantAdded:Connect(function(obj)
			if keyESP and obj:IsA("BasePart") and obj.Name:lower() == "roomkey" and obj.Parent.Name:lower() ~= "door" then
				CreateESP(obj, "Key", Color3.new(1, 1, 0))
			end
		end)
	end)

	task.spawn(function()
		SafeGetService("Workspace").Game.Rooms.DescendantAdded:Connect(function(obj)
			if bitESP and obj:IsA("BasePart") and obj.Name:lower() == "bit" then
				CreateESP(obj, "Bit", Color3.new(1, 0.666667, 0))
			end
		end)
	end)

	task.spawn(function()
		SafeGetService("Workspace").Game.Rooms.DescendantAdded:Connect(function(obj)
			if batteryESP and obj:IsA("BasePart") and obj.Name:lower() == "battery" then
				CreateESP(obj, "Battery", Color3.new(0, 0.666667, 0))
			end
		end)
	end)

	task.spawn(function()
		SafeGetService("RunService").Heartbeat:Connect(function()
			if game.PlaceId==renovation then
				if rotation then
					charRotate(true)
				else
					charRotate(false)
				end
			end
		end)
	end)

	task.spawn(function()
		plr.PlayerGui.DescendantAdded:Connect(function(txt)
			if txt:IsA("TextLabel") and txt.Parent and txt.Parent.Name:lower() == "hintframe" then
				local text = txt.Text:lower()
				if text == "cannot pick that up." or text == "you already have this" then
					task.defer(function()
						if txt and txt.Parent then
							txt:Destroy()
						end
					end)
				end
			end
		end)
	end)

	getgenv().speed = nil
	getgenv().jump = nil
	getgenv().fov = nil
	local manageOver = nil
	local brightLoop = nil
	local ANTIAFK = nil


	local Tab = Window:CreateTab("Main", decalID)

	local Tab1 = Window:CreateTab("Toggles", 12544524983)

	local Tab2 = Window:CreateTab("Auto", 69395121)

	local Tab3 = Window:CreateTab("Player", 470645116)

	local Tab5 = Window:CreateTab("Random Stuff", 16354254055)

	local Tab50 = Window:CreateTab("Info/Stats", 2246486837)

	local Tab6 = Window:CreateTab("Trash", 15702284942)

	Tab:CreateButton({
		Name = "Infinite Flashlight",
		Callback = function()
			SafeGetService("ReplicatedStorage").Remotes.FLASHLIGHT_TOGGLE:FireServer(false, 99999999999999)
		end,
	})

	Tab:CreateButton({
		Name = "God Mode [WIP]",
		Callback = function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/endless-doors/main/ED%20god"))()
		end,
	})

	Tab:CreateToggle({
		Name = "Bypass Overseer",
		CurrentValue = false,
		Flag = "overSeer",
		Callback = function(Value)
			if Value then
				if manageOver then
					manageOver:Disconnect()
				end
				manageOver = SafeGetService("Workspace").Game.DescendantAdded:Connect(function(seer)
					if seer.Name:lower() == "overseer" then
						task.defer(function()
							if seer and seer.Parent then
								seer:Destroy()
							end
						end)
					end
				end)
	
				for _, seerover in ipairs(SafeGetService("Workspace").Game.Entities:GetChildren()) do
					if seerover.Name:lower() == "overseer" then
						task.defer(function()
							if seerover and seerover.Parent then
								seerover:Destroy()
							end
						end)
					end
				end
			else
				if manageOver then
					manageOver:Disconnect()
					manageOver = nil
				end
			end
		end,
	})

	Tab:CreateToggle({
		Name = "Disable Fallen Look Script",
		CurrentValue = false,
		Flag = "fallenLook",
		Callback = function(Value)
			if game.PlaceId~=classicED then
				plr.PlayerScripts:FindFirstChild("Looking").Enabled = not Value
			else
			end
		end,
	})

	Tab:CreateToggle({
		Name = "Disable Camera Shaking",
		CurrentValue = false,
		Flag = "camShaking",
		Callback = function(Value)
			if game.PlaceId == renovation then
				plr.PlayerScripts:FindFirstChild("LocalShaking").Enabled = not Value
				plr.PlayerScripts:FindFirstChild("CameraShake").Enabled = not Value
			end
		end,
	})

	Tab:CreateToggle({
		Name = "Full Bright",
		CurrentValue = false,
		Flag = "brightLol",
		Callback = function(Value)
			local Lighting = SafeGetService("Lighting")
	
			if Value then
				if brightLoop then
					brightLoop:Disconnect()
				end
	
				for _, v in ipairs(Lighting:GetDescendants()) do
					if v:IsA("Atmosphere") then
						v:Destroy()
					end
				end
	
				brightLoop = SafeGetService("RunService").Heartbeat:Connect(function()
					Lighting.ClockTime = 14
					Lighting.FogEnd = 1e10
					Lighting.FogStart = 0
					Lighting.GlobalShadows = false
					Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
					Lighting.Brightness = 3
				end)
			else
				if brightLoop then
					brightLoop:Disconnect()
					brightLoop = nil
				end
	
				Lighting.ClockTime = 0
				Lighting.FogEnd = 100000
				Lighting.FogStart = 0
				Lighting.GlobalShadows = false
				Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
				Lighting.Brightness = 1
			end
		end,
	})

	Tab:CreateToggle({
		Name = "Anti AFK",
		CurrentValue = false,
		Flag = "antiAFK",
		Callback = function(Value)
			if Value then
				ANTIAFK = plr.Idled:connect(function()
					SafeGetService("VirtualUser"):Button2Down(Vector2.new(0,0),SafeGetService("Workspace").CurrentCamera.CFrame)
					task.wait(1)
					SafeGetService("VirtualUser"):Button2Up(Vector2.new(0,0),SafeGetService("Workspace").CurrentCamera.CFrame)
				end)
			else
				if ANTIAFK then
					ANTIAFK:Disconnect()
				end
			end
		end,
	})

	Tab:CreateButton({
		Name = "Play Again",
		Callback = function()
			SafeGetService("ReplicatedStorage").Remotes.PLAY_AGAIN:FireServer()
		end,
	})

	Tab:CreateButton({
		Name = "Buy Respawn",
		Callback = function()
			SafeGetService("ReplicatedStorage").Remotes.BUY_RESPAWN:FireServer()
		end,
	})


	Tab1:CreateToggle({
		Name = "Entity Esp",
		CurrentValue = false,
		Flag = "entityESP",
		Callback = function(Value)
			entityEsp = Value
			local Entities = SafeGetService("Workspace").Game.Entities
	
			if not Value then
				for _, descendant in ipairs(Entities:GetDescendants()) do
					if descendant:IsA("BoxHandleAdornment") and descendant.Name:sub(-7) == "_PEEPEE" then
						local adornee = descendant.Adornee
						if adornee then
							for _, child in ipairs(adornee:GetChildren()) do
								if child:IsA("BillboardGui") or child:IsA("BoxHandleAdornment") then
									child:Destroy()
								end
							end
						end
					end
				end
			else
				for _, entity in ipairs(Entities:GetChildren()) do
					if entity:IsA("Model") or entity:IsA("BasePart") then
						CreateESP(entity)
					end
				end
			end
		end,
	})
	
	Tab1:CreateToggle({
		Name = "Key Esp",
		CurrentValue = false,
		Flag = "KeyESP",
		Callback = function(Value)
			keyESP = Value
			local Rooms = SafeGetService("Workspace").Game.Rooms
	
			if not Value then
				for _, descendant in ipairs(Rooms:GetDescendants()) do
					if descendant:IsA("BoxHandleAdornment") and descendant.Name:sub(-7) == "_PEEPEE" then
						local adornee = descendant.Adornee
						if adornee and adornee.Name:lower() == "roomkey" then
							for _, child in ipairs(adornee:GetChildren()) do
								if child:IsA("BillboardGui") or child:IsA("BoxHandleAdornment") then
									child:Destroy()
								end
							end
						end
					end
				end
			else
				for _, key in ipairs(Rooms:GetDescendants()) do
					if key:IsA("BasePart") and key.Name:lower() == "roomkey" and key.Parent and key.Parent.Name:lower() ~= "door" then
						CreateESP(key, "Key", Color3.new(1, 1, 0))
					end
				end
			end
		end,
	})
	
	Tab1:CreateToggle({
		Name = "Bits Esp",
		CurrentValue = false,
		Flag = "BitsESP",
		Callback = function(Value)
			bitESP = Value
			local Rooms = SafeGetService("Workspace").Game.Rooms
	
			if not Value then
				for _, descendant in ipairs(Rooms:GetDescendants()) do
					if descendant:IsA("BoxHandleAdornment") and descendant.Name:sub(-7) == "_PEEPEE" then
						local adornee = descendant.Adornee
						if adornee and adornee.Name:lower() == "bit" then
							for _, child in ipairs(adornee:GetChildren()) do
								if child:IsA("BillboardGui") or child:IsA("BoxHandleAdornment") then
									child:Destroy()
								end
							end
						end
					end
				end
			else
				for _, bit in ipairs(Rooms:GetDescendants()) do
					if bit:IsA("BasePart") and bit.Name:lower() == "bit" then
						CreateESP(bit, "Bit", Color3.new(1, 0.666667, 0))
					end
				end
			end
		end,
	})
	
	Tab1:CreateToggle({
		Name = "Battery Esp",
		CurrentValue = false,
		Flag = "BatteryESP",
		Callback = function(Value)
			batteryESP = Value
			local Rooms = SafeGetService("Workspace").Game.Rooms
	
			if not Value then
				for _, descendant in ipairs(Rooms:GetDescendants()) do
					if descendant:IsA("BoxHandleAdornment") and descendant.Name:sub(-7) == "_PEEPEE" then
						local adornee = descendant.Adornee
						if adornee and adornee.Name:lower() == "battery" then
							for _, child in ipairs(adornee:GetChildren()) do
								if child:IsA("BillboardGui") or child:IsA("BoxHandleAdornment") then
									child:Destroy()
								end
							end
						end
					end
				end
			else
				for _, battery in ipairs(Rooms:GetDescendants()) do
					if battery:IsA("BasePart") and battery.Name:lower() == "battery" then
						CreateESP(battery, "Battery", Color3.new(0, 0.666667, 0))
					end
				end
			end
		end,
	})

	Tab1:CreateToggle({
		Name = "Entity Remote Logger",
		CurrentValue = false,
		Flag = "entRem",
		Callback = function(Value)
			remoteThingy = Value
		end,
	})

	Tab1:CreateToggle({
		Name = "Entity Notifier",
		CurrentValue = false,
		Flag = "entityNotifs",
		Callback = function(Value)
			entityNotif = Value
		end,
	})

	--[[Tab2:CreateToggle({
		Name = "Bit Aura",
		CurrentValue = false,
		Flag = "bitAura",
		Callback = function(Value)
			getgenv().bits = Value
		end,
	})

	Tab2:CreateToggle({
		Name = "Key Aura",
		CurrentValue = false,
		Flag = "keyAura",
		Callback = function(Value)
			getgenv().Key = Value
		end,
	})

	Tab2:CreateToggle({
		Name = "Vitamin Aura",
		CurrentValue = false,
		Flag = "VitaminAura",
		Callback = function(Value)
			getgenv().Vita = Value
		end,
	})

	Tab2:CreateToggle({
		Name = "Bandage Aura",
		CurrentValue = false,
		Flag = "BandageAura",
		Callback = function(Value)
			getgenv().Band = Value
		end,
	})

	Tab2:CreateToggle({
		Name = "Lockpick Aura",
		CurrentValue = false,
		Flag = "LockpickAura",
		Callback = function(Value)
			getgenv().LockPick = Value
		end,
	})

	Tab2:CreateToggle({
		Name = "Mysterious Key Aura",
		CurrentValue = false,
		Flag = "MysteriousKeyAura",
		Callback = function(Value)
			getgenv().SusKey = Value
		end,
	})

	Tab2:CreateToggle({
		Name = "Crucifix Aura",
		CurrentValue = false,
		Flag = "CrucifixAura",
		Callback = function(Value)
			getgenv().Crucifix = Value
		end,
	})]]

	Tab2:CreateSection("had to remove the other sections since they were broken and too buggy")
	Tab2:CreateSection("Everything Aura will only work for items that are needed")

	Tab2:CreateToggle({
		Name = "Everything Aura | [WIP]",
		CurrentValue = false,
		Flag = "AuraAll",
		Callback = function(Value)
			getgenv().chaos = Value
		end,
	})



	Tab3:CreateSlider({
		Name = "Set WalkSpeed",
		Range = {0, 50},
		Increment = 1,
		CurrentValue = 16,
		Flag = "WalkSpeedValue",
		Callback = function(v)
			getgenv().speed = v
		end,
	})

	Tab3:CreateToggle({
		Name = "Toggle WalkSpeed",
		CurrentValue = false,
		Flag = "WSspeed",
		Callback = function(Value)
			getgenv().sped = Value
		end,
	})

	Tab3:CreateSlider({
		Name = "Set JumpPower",
		Range = {0, 100},
		Increment = 1,
		CurrentValue = 30,
		Flag = "JumpPowerValue",
		Callback = function(val)
			getgenv().jump = val
		end,
	})

	Tab3:CreateToggle({
		Name = "Toggle JumpPower",
		CurrentValue = false,
		Flag = "JPtgl",
		Callback = function(Value)
			getgenv().jumpy = Value
		end,
	})

	Tab3:CreateSlider({
		Name = "Set FOV",
		Range = {0, 120},
		Increment = 1,
		CurrentValue = 60,
		Flag = "FieldOfViewValue",
		Callback = function(fov)
			getgenv().fov = fov
		end,
	})

	Tab3:CreateToggle({
		Name = "Toggle FOV",
		CurrentValue = false,
		Flag = "FovTgl",
		Callback = function(Value)
			getgenv().wide = Value
		end,
	})


	Tab3:CreateToggle({
		Name = "Infinite Jump",
		CurrentValue = false,
		Flag = "infJP",
		Callback = function(Value)
			local Players = SafeGetService("Players")
			local LocalPlayer = Players.LocalPlayer
			local UserInputService = SafeGetService("UserInputService")
			local IsOnMobile = UserInputService.TouchEnabled
		
			if INFENDLESSJP then
				INFENDLESSJP:Disconnect()
				INFENDLESSJP = nil
			end
			if mobileInfinite then
				mobileInfinite:Disconnect()
				mobileInfinite = nil
			end
		
			if Value then
				INFENDLESSJP = UserInputService.JumpRequest:Connect(function()
					local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if humanoid then
						humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
					end
				end)
		
				if IsOnMobile and game.PlaceId == renovation then
					local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if humanoid then
						humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)
					end
		
					local jumpButton = LocalPlayer.PlayerGui:WaitForChild("TouchControls"):WaitForChild("MobileControls"):WaitForChild("JumpButton")
					mobileInfinite = jumpButton.MouseButton1Click:Connect(function()
						local mobileHumanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
						if mobileHumanoid then
							mobileHumanoid:ChangeState(Enum.HumanoidStateType.Jumping)
						end
					end)
				end
			end
		end,
	})

	Tab3:CreateToggle({
		Name = "Character Rotation",
		CurrentValue = true,
		Flag = "charRotate",
		Callback = function(Value)
			rotation=Value
		end,
	})

	Tab5:CreateButton({
		Name = "Hide Value",
		Callback = function()
			plr.Character.Hiding.Value = not plr.Character.Hiding.Value
		end
	})

	Tab5:CreateButton({
		Name = "Teleport to Door",
		Callback = function()
			task.spawn(teleportToDoor)
		end,
	})

	Tab5:CreateButton({
		Name = "Teleport to Key",
		Callback = function()
			task.spawn(teleportToKey)
		end,
	})

	Tab5:CreateButton({
		Name = "Teleport to Lever",
		Callback = function()
			task.spawn(teleportToLever)
		end,
	})

	Tab5:CreateToggle({
		Name = "Loop Teleport To Door",
		CurrentValue = false,
		Callback = function(val)
			getgenv().teletodoor = val

			while getgenv().teletodoor and task.wait(.3) do
				pcall(function()
					task.spawn(teleportToDoor)
				end)
			end
		end,
	})

	Tab5:CreateToggle({
		Name = "Loop Teleport To Key",
		CurrentValue = false,
		Callback = function(val)
			getgenv().teletokey = val

			while getgenv().teletokey and task.wait(.5) do
				pcall(function()
					task.spawn(teleportToKey)
				end)
			end
		end,
	})

	Tab5:CreateToggle({
		Name = "Loop Teleport To Lever",
		CurrentValue = false,
		Callback = function(val)
			getgenv().teletolever = val

			while getgenv().teletolever and task.wait(.5) do
				pcall(function()
					task.spawn(teleportToLever)
				end)
			end
		end,
	})

	Tab5:CreateSection("")
	Tab5:CreateSection("idk why i even added this")



	getgenv().Notifv1 = "Door"

	Tab5:CreateInput({
		Name = "Notification Text",
		PlaceholderText = "Text",
		RemoveTextAfterFocusLost = false,
		Callback = function(Text)
			getgenv().Notifv1 = Text
		end,
	})

	Tab5:CreateButton({
		Name = "Send Notification",
		Callback = function()
			Rayfield:Notify({
				Title = "Notification",
				Content = getgenv().Notifv1,
				Duration = 3,
				Image = decalID,
			})
		end,
	})

	Tab50:CreateSection("Player Stats")

	rmtxt = Tab50:CreateLabel("Rooms: "..playerRoom())
	bittxt = Tab50:CreateLabel("Bits: "..playerBits())
	doubleBits = Tab50:CreateLabel("Double Bits: "..x2bits())
	if game.PlaceId == renovation then
		fames = Tab50:CreateLabel("Fame: "..fame())
		dies = Tab50:CreateLabel("Deaths: "..deaths())
		inRift = Tab50:CreateLabel("Rift: "..rifted())
		joinedGroup = Tab50:CreateLabel("Joined Group: "..inGroup())
	end

	Tab50:CreateSection("")

	Tab50:CreateSection("Game Info")

	curtxt = Tab50:CreateLabel("Current Room: "..curRoom())
	philMeter = Tab50:CreateLabel("Phil Chance: "..philChance())
	spiderChance = Tab50:CreateLabel("Spider Chance: "..tamara())
	if game.PlaceId ~= classicED then
		RevCount = Tab50:CreateLabel("Revive Price: "..revPrice())
	end
	plrAlives = Tab50:CreateLabel("Players Alive: "..AlivePlrs())
	plrInGame = Tab50:CreateLabel("Players In Game: "..inGamePlrs())
	if game.PlaceId == renovation then
		Tab50:CreateSection("")
		Tab50:CreateSection("Collectibles")

		Fuzzi = Tab50:CreateLabel("Fuzzi: "..fuz())
		Zav = Tab50:CreateLabel("Zav: "..zavv())
		Jake = Tab50:CreateLabel("Jake: "..jaek())
		Blue = Tab50:CreateLabel("Blue: "..cyan())
		Alan = Tab50:CreateLabel("Alan: "..alen())
	end

	task.spawn(function()
		while task.wait() do
			pcall(function()
				rmtxt:Set("Rooms: "..playerRoom())
				bittxt:Set("Bits: "..playerBits())
				doubleBits:Set("Double Bits: "..x2bits())

				curtxt:Set("Current Room: "..curRoom())
				philMeter:Set("Phil Chance: "..philChance())
				spiderChance:Set("Spider Chance: "..tamara())
				if game.PlaceId ~= classicED then
					RevCount:Set("Revive Price: "..revPrice())
				end
				plrAlives:Set("Players Alive: "..AlivePlrs())
				plrInGame:Set("Players In Game: "..inGamePlrs())

				if game.PlaceId == renovation  then
					fames:Set("Fame: "..fame())
					dies:Set("Deaths: "..deaths())
					inRift:Set("Rift: "..rifted())
					joinedGroup:Set("Joined Group: "..inGroup())

					Fuzzi:Set("Fuzzi: "..fuz())
					Zav:Set("Zav: "..zavv())
					Jake:Set("Jake: "..jaek())
					Blue:Set("Blue: "..cyan())
					Alan:Set("Alan: "..alen())
				end
			end)
		end
	end)

	Tab6:CreateButton({
		Name = "Destroy Gui",
		Callback = function()
			Rayfield:Destroy()
		end,
	})

	if game.PlaceId==classicED then
		Rayfield:Notify({
			Title = "Info",
			Content = "Door Aura has been disabled on this mode due to tamara",
			Duration = 7,
			Image = decalID,
		})
	end

	Rayfield:LoadConfiguration()

	-- auras
	--[[task.spawn(function()
		while task.wait() do
			if getgenv().bits then
				pcall(function()
					for _, room in ipairs(SafeGetService("Workspace").Game.Rooms:GetChildren()) do
						for _, v in pairs(room:GetDescendants()) do
							local bitVal = plr.leaderstats.Bits
							if (game.PlaceId == epicmode or game.PlaceId == EMArchive) and bitVal.Value >= 2500 then
							else
								processObject(v, "bit")
							end
						end
					end
				end)
			end
		end
	end)
	task.spawn(function()
		while task.wait() do
			if getgenv().Key then
				pcall(function()
					for _, room in ipairs(SafeGetService("Workspace").Game.Rooms:GetChildren()) do
						for _, v in pairs(room:GetDescendants()) do
							processObject(v, "roomkey")
						end
					end
				end)

			end
		end
	end)
	task.spawn(function()
		while task.wait() do
			if getgenv().Vita then
				pcall(function()
					for _, room in ipairs(SafeGetService("Workspace").Game.Rooms:GetChildren()) do
						for _, v in pairs(room:GetDescendants()) do

							processObject(v, "vitamins")
						end
					end
				end)
			end
		end
	end)
	task.spawn(function()
		while task.wait() do
			if getgenv().Band then
				pcall(function()
					for _, room in ipairs(SafeGetService("Workspace").Game.Rooms:GetChildren()) do
						for _, v in pairs(room:GetDescendants()) do
							processObject(v, "bandage")
						end
					end
				end)
			end
		end
	end)
	task.spawn(function()
		while task.wait() do
			if getgenv().LockPick then
				pcall(function()
					for _, room in ipairs(SafeGetService("Workspace").Game.Rooms:GetChildren()) do
						for _, v in pairs(room:GetDescendants()) do
							processObject(v, "lockpick")
						end
					end
				end)
			end
		end
	end)
	task.spawn(function()
		while task.wait() do
			if getgenv().SusKey then
				pcall(function()
					for _, room in ipairs(SafeGetService("Workspace").Game.Rooms:GetChildren()) do
						for _, v in pairs(room:GetDescendants()) do
							processObject(v, "mysterious key")
						end
					end
				end)
			end
		end
	end)
	task.spawn(function()
		while task.wait() do
			if getgenv().Crucifix then
				pcall(function()
					for _, v in pairs(SafeGetService("Workspace").Game.Rooms:GetDescendants()) do
						processObject(v, "crucifix")
					end
				end)
			end
		end
	end)]]
	task.spawn(function()
		--[[while task.wait() do
			if getgenv().chaos then
				pcall(function()
					for _, room in ipairs(SafeGetService("Workspace").Game.Rooms:GetChildren()) do
						for _, v in ipairs(room:GetDescendants()) do
							if v:IsA("ProximityPrompt") and v.Name == "ProximityPrompt" then
								local bitVal = plr.leaderstats.Bits
								local h = (game.PlaceId ~= renovation) and 6 or 0
								local maxDistance = v.MaxActivationDistance + h
								if (v.Parent.Position - getRoot(plr.Character).Position).Magnitude <= maxDistance then
									if (game.PlaceId == epicmode or game.PlaceId == EMArchive) then
										if (bitVal.Value >= 2500 and v.Parent.Name:lower() ~= "bit") then
											fireproximityprompt(v,1)
										elseif bitVal.Value < 2500 then
											fireproximityprompt(v,1)
										end
									elseif game.PlaceId==classicED then
										if v.Parent.Name:lower() == "handle" then
										else
											fireproximityprompt(v,1)
										end
									else
										fireproximityprompt(v,1)
									end
								end
							end
						end
					end
				end)
			end
		end]]
		SafeGetService("RunService").Heartbeat:Connect(function()
			if getgenv().chaos then
				if getRoot(plr.Character) and getRoot(plr.Character).Parent then
					task.spawn(fireItems)
				end
			end
		end)
	end)



	-- player stuff
	task.spawn(function()
		while task.wait() do
			local humanoid = plr.Character and plr.Character:FindFirstChildWhichIsA("Humanoid")
			if humanoid then
				if getgenv().sped then
					pcall(function()
						humanoid.WalkSpeed = getgenv().speed
					end)
				end
				if getgenv().jumpy then
					pcall(function()
						humanoid.JumpPower = getgenv().jump
					end)
				end
			end
		end
	end)
	task.spawn(function()
		SafeGetService("RunService").Heartbeat:Connect(function()
			if getgenv().wide then
				pcall(function()
					num = tonumber(getgenv().fov) or 70
					SafeGetService("TweenService"):Create(SafeGetService("Workspace").CurrentCamera, TweenInfo.new(0, Enum.EasingStyle.Linear), {FieldOfView=tonumber(num)}):Play()
				end)
			end
		end)
		
		if getgenv().wide then
			pcall(function()
				num = tonumber(getgenv().fov) or 70
				SafeGetService("TweenService"):Create(SafeGetService("Workspace").CurrentCamera, TweenInfo.new(0, Enum.EasingStyle.Linear), {FieldOfView=tonumber(num)}):Play()
			end)
		end
	end)

	for _, room in ipairs(SafeGetService("Workspace").Game.Rooms:GetDescendants()) do
		aC(room)
	end

	SafeGetService("Workspace").Game.Rooms.DescendantAdded:Connect(aC)
end